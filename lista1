1. Exibir lista de alunos e seus cursos

CREATE VIEW AlunosCursos AS
SELECT a.nome AS Aluno, d.nome AS Disciplina, c.nome AS Curso
FROM Alunos a
JOIN Matriculas m ON a.id = m.aluno_id
JOIN Disciplinas d ON m.disciplina_id = d.id
JOIN Cursos c ON d.curso_id = c.id;

2. Exibir total de alunos por disciplina

CREATE VIEW TotalAlunosDisciplinas AS
SELECT d.nome AS Disciplina, COUNT(m.aluno_id) AS Total_Alunos
FROM Disciplinas d
LEFT JOIN Matriculas m ON d.id = m.disciplina_id
GROUP BY d.nome;

3. Exibir alunos e status das suas matrículas

CREATE VIEW AlunosStatusMatricula AS
SELECT a.nome AS Aluno, d.nome AS Disciplina, m.status AS Status
FROM Alunos a
JOIN Matriculas m ON a.id = m.aluno_id
JOIN Disciplinas d ON m.disciplina_id = d.id;

4. Exibir professores e suas turmas

CREATE VIEW ProfessoresTurmas AS
SELECT p.nome AS Professor, d.nome AS Disciplina, t.horario AS Horario
FROM Professores p
JOIN Disciplinas d ON p.id = d.professor_id
JOIN Turmas t ON d.id = t.disciplina_id;

5. Exibir alunos maiores de 20 anos

CREATE VIEW AlunosMaiores20 AS
SELECT nome AS Aluno, data_nascimento AS Data_Nascimento
FROM Alunos
WHERE DATEDIFF(CURDATE(), data_nascimento) / 365 > 20;

6. Exibir disciplinas e carga horária total por curso

CREATE VIEW DisciplinasCargaHoraria AS
SELECT c.nome AS Curso, COUNT(d.id) AS Total_Disciplinas, SUM(d.carga_horaria) AS Carga_Horaria_Total
FROM Cursos c
JOIN Disciplinas d ON c.id = d.curso_id
GROUP BY c.nome;

7. Exibir professores e suas especialidades

CREATE VIEW ProfessoresEspecialidades AS
SELECT nome AS Professor, especialidade AS Especialidade
FROM Professores;

8. Exibir alunos matriculados em mais de uma disciplina

CREATE VIEW AlunosMultidisciplinas AS
SELECT a.nome AS Aluno
FROM Alunos a
JOIN Matriculas m ON a.id = m.aluno_id
GROUP BY a.id
HAVING COUNT(m.disciplina_id) > 1;

9. Exibir alunos e o número de disciplinas que concluíram

CREATE VIEW AlunosDisciplinasConcluidas AS
SELECT a.nome AS Aluno, COUNT(m.disciplina_id) AS Disciplinas_Concluidas
FROM Alunos a
JOIN Matriculas m ON a.id = m.aluno_id
WHERE m.status = 'Concluído'
GROUP BY a.id;

10. Exibir todas as turmas de um semestre específico

CREATE VIEW TurmasPorSemestre AS
SELECT *
FROM Turmas
WHERE semestre = '2024.1';

11. Exibir alunos com matrículas trancadas

CREATE VIEW AlunosMatriculasTrancadas AS
SELECT a.nome AS Aluno
FROM Alunos a
JOIN Matriculas m ON a.id = m.aluno_id
WHERE m.status = 'Trancado';

12. Exibir disciplinas que não têm alunos matriculados

CREATE VIEW DisciplinasSemAlunos AS
SELECT d.nome AS Disciplina
FROM Disciplinas d
LEFT JOIN Matriculas m ON d.id = m.disciplina_id
WHERE m.aluno_id IS NULL;

13. Exibir a quantidade de alunos por status de matrícula

CREATE VIEW TotalAlunosPorStatus AS
SELECT m.status AS Status, COUNT(m.aluno_id) AS Total_Alunos
FROM Matriculas m
GROUP BY m.status;
14. Exibir o total de professores por especialidade

CREATE VIEW TotalProfessoresPorEspecialidade AS
SELECT especialidade AS Especialidade, COUNT(*) AS Total_Professores
FROM Professores
GROUP BY especialidade;

15. Exibir lista de alunos e suas idades

CREATE VIEW AlunosIdades AS
SELECT nome AS Aluno, FLOOR(DATEDIFF(CURDATE(), data_nascimento) / 365) AS Idade
FROM Alunos;

16. Exibir alunos e suas últimas matrículas

CREATE VIEW AlunosUltimasMatriculas AS
SELECT a.nome AS Aluno, MAX(m.data_matricula) AS Ultima_Matricula
FROM Alunos a
JOIN Matriculas m ON a.id = m.aluno_id
GROUP BY a.id;

17. Exibir todas as disciplinas de um curso específico

CREATE VIEW DisciplinasPorCurso AS
SELECT d.nome AS Disciplina
FROM Disciplinas d
JOIN Cursos c ON d.curso_id = c.id
WHERE c.nome = 'Engenharia de Software';

18. Exibir os professores que não têm turmas

CREATE VIEW ProfessoresSemTurmas AS
SELECT p.nome AS Professor
FROM Professores p
LEFT JOIN Disciplinas d ON p.id = d.professor_id
LEFT JOIN Turmas t ON d.id = t.disciplina_id
WHERE t.id IS NULL;

19. Exibir lista de alunos com CPF e email

CREATE VIEW AlunosCpfEmail AS
SELECT nome AS Aluno, cpf AS CPF, email AS Email
FROM Alunos;

20. Exibir o total de disciplinas por professor

CREATE VIEW TotalDisciplinasPorProfessor AS
SELECT p.nome AS Professor, COUNT(d.id) AS Total_Disciplinas
FROM Professores p
JOIN Disciplinas d ON p.id = d.professor_id
GROUP BY p.id;
